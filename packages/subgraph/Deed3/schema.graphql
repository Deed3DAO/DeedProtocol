# DeedNFT.sol

type DeedNFTEntity @entity(immutable: false) {
    id: Bytes!
    deedId: BigInt! # uint256
    deedInfo_ipfsDetailsHash: Bytes! # bytes
    deedInfo_assetType: Int! # uint8
    deedInfo_price: BigInt! # uint256
    deedInfo_deedAddress: String! # string
    deedInfo_isValidated: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
    id: Bytes!
    role: Bytes! # bytes32
    previousAdminRole: Bytes! # bytes32
    newAdminRole: Bytes! # bytes32
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
    id: Bytes!
    role: Bytes! # bytes32
    account: Bytes! # address
    sender: Bytes! # address
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
    id: Bytes!
    role: Bytes! # bytes32
    account: Bytes! # address
    sender: Bytes! # address
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
    id: Bytes!
    from: Bytes! # address
    to: Bytes! # address
    tokenId: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type Approval @entity(immutable: true) {
    id: Bytes!
    owner: Bytes! # address
    approved: Bytes! # address
    tokenId: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
    id: Bytes!
    owner: Bytes! # address
    operator: Bytes! # address
    approved: Boolean! # bool
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

# SubdivisionNFT.sol

type SubdivisionEntity @entity(immutable: false) {
    id: Bytes!
    owner: Bytes! # address
    subdivisionId: BigInt! # uint256
    deedId: BigInt! # uint256
    ipfsDetailsHash: Bytes! # bytes
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type SubdivisionBurned @entity(immutable: true) {
    id: Bytes!
    account: Bytes! # address
    subdivisionId: BigInt! # uint256
    deedId: BigInt! # uint256
    ipfsDetailsHash: Bytes! # bytes
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type URI @entity(immutable: true) {
    id: Bytes!
    value: String! # string
    SubdivisionNFT_id: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TransferBatch @entity(immutable: true) {
    id: Bytes!
    operator: Bytes! # address
    from: Bytes! # address
    to: Bytes! # address
    ids: [BigInt!]! # uint256[]
    values: [BigInt!]! # uint256[]
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type TransferSingle @entity(immutable: true) {
    id: Bytes!
    operator: Bytes! # address
    from: Bytes! # address
    to: Bytes! # address
    SubdivisionNFT_id: BigInt! # uint256
    value: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

# LeaseNFT.sol

type OwnershipTransferred @entity(immutable: true) {
    id: Bytes!
    previousOwner: Bytes! # address
    newOwner: Bytes! # address
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

# FundsManager.sol

type FundsStored @entity(immutable: true) {
    id: Bytes!
    FundsManager_id: BigInt! # uint256
    token: Bytes! # address
    amount: BigInt! # uint256
    sender: Bytes! # address
    caller: Bytes! # address
    newBalance: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type FundsWithdrawn @entity(immutable: true) {
    id: Bytes!
    FundsManager_id: BigInt! # uint256
    token: Bytes! # address
    amount: BigInt! # uint256
    destination: Bytes! # address
    caller: Bytes! # address
    newBalance: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

# LeaseAgreement.sol

type LeaseCreated @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    lease_lessor: Bytes! # address
    lease_lessee: Bytes! # address
    lease_rentAmount: BigInt! # uint256
    lease_securityDeposit_amount: BigInt! # uint256
    lease_securityDeposit_paid: Boolean! # bool
    lease_latePaymentFee: BigInt! # uint256
    lease_gracePeriod: BigInt! # uint32
    lease_dates_startDate: BigInt! # uint256
    lease_dates_endDate: BigInt! # uint256
    lease_dates_rentDueDate: BigInt! # uint256
    lease_dates_distributableDate: BigInt! # uint256
    lease_extensionCount: BigInt! # uint256
    lease_propertyTokenId: BigInt! # uint256
    lease_agent: Bytes! # address
    lease_agentPercentage: Int! # uint8
    lease_unclaimedRentAmount: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseAgentRemoved @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseAgentSet @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    agent: Bytes! # address
    percentage: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseDepositSubmited @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    amount: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseDueDateChanged @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    newDueDate: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseExtended @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    endDate: BigInt! # uint256
    rentAmount: BigInt! # uint256
    extensionCount: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseFundsManagerSet @entity(immutable: true) {
    id: Bytes!
    fundsManager: Bytes! # address
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeasePaymentMade @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    amount: BigInt! # uint256
    unclaimedRentAmount: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeasePaymentTokenSet @entity(immutable: true) {
    id: Bytes!
    paymentToken: Bytes! # address
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseRentDistributed @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    lessorAmount: BigInt! # uint256
    agentAmount: BigInt! # uint256
    distributableDate: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}

type LeaseTerminated @entity(immutable: true) {
    id: Bytes!
    leaseId: BigInt! # uint256
    timestamp: BigInt! # uint256
    blockNumber: BigInt!
    blockTimestamp: BigInt!
    transactionHash: Bytes!
}
