type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DeedMinted @entity(immutable: true) {
  id: Bytes!
  _deedInfo_ipfsDetailsHash: String! # string
  _deedInfo_assetType: Int! # uint8
  _deedInfo_price: BigInt! # uint256
  _deedInfo_address: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type IpfsDetailsSet @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  ipfsDetailsHash: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubdivisionInfoSet @entity(immutable: true) {
  id: Bytes!
  tokenId: BigInt! # uint256
  info_ipfsDetailsHash: Bytes! # bytes
  info_owner: Bytes! # address
  info_parentDeed: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SubdivisionMinted @entity(immutable: true) {
  id: Bytes!
  to: Bytes! # address
  subdivisionId: BigInt! # uint256
  deedId: BigInt! # uint256
  ipfsDetailsHash: Bytes! # bytes
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferBatch @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  ids: [BigInt!]! # uint256[]
  values: [BigInt!]! # uint256[]
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TransferSingle @entity(immutable: true) {
  id: Bytes!
  operator: Bytes! # address
  from: Bytes! # address
  to: Bytes! # address
  SubdivisionNFT_id: BigInt! # uint256
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type URI @entity(immutable: true) {
  id: Bytes!
  value: String! # string
  SubdivisionNFT_id: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type FundsStored @entity(immutable: true) {
  id: Bytes!
  FundsManager_id: BigInt! # uint256
  token: Bytes! # address
  amount: BigInt! # uint256
  sender: Bytes! # address
  caller: Bytes! # address
  newBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsWithdrawn @entity(immutable: true) {
  id: Bytes!
  FundsManager_id: BigInt! # uint256
  token: Bytes! # address
  amount: BigInt! # uint256
  destination: Bytes! # address
  caller: Bytes! # address
  newBalance: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type AgentRemoved @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AgentSet @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  agent: Bytes! # address
  percentage: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DueDateChanged @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  newDueDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsManagerSet @entity(immutable: true) {
  id: Bytes!
  fundsManager: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LeaseCreated @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type LeaseTerminated @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PaymentMade @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RentDistributed @entity(immutable: true) {
  id: Bytes!
  leaseId: BigInt! # uint256
  lessorAmount: BigInt! # uint256
  agentAmount: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
