// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AgentRemoved extends ethereum.Event {
  get params(): AgentRemoved__Params {
    return new AgentRemoved__Params(this);
  }
}

export class AgentRemoved__Params {
  _event: AgentRemoved;

  constructor(event: AgentRemoved) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class AgentSet extends ethereum.Event {
  get params(): AgentSet__Params {
    return new AgentSet__Params(this);
  }
}

export class AgentSet__Params {
  _event: AgentSet;

  constructor(event: AgentSet) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get agent(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get percentage(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class DueDateChanged extends ethereum.Event {
  get params(): DueDateChanged__Params {
    return new DueDateChanged__Params(this);
  }
}

export class DueDateChanged__Params {
  _event: DueDateChanged;

  constructor(event: DueDateChanged) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newDueDate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundsManagerSet extends ethereum.Event {
  get params(): FundsManagerSet__Params {
    return new FundsManagerSet__Params(this);
  }
}

export class FundsManagerSet__Params {
  _event: FundsManagerSet;

  constructor(event: FundsManagerSet) {
    this._event = event;
  }

  get fundsManager(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class LeaseCreated extends ethereum.Event {
  get params(): LeaseCreated__Params {
    return new LeaseCreated__Params(this);
  }
}

export class LeaseCreated__Params {
  _event: LeaseCreated;

  constructor(event: LeaseCreated) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class LeaseTerminated extends ethereum.Event {
  get params(): LeaseTerminated__Params {
    return new LeaseTerminated__Params(this);
  }
}

export class LeaseTerminated__Params {
  _event: LeaseTerminated;

  constructor(event: LeaseTerminated) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PaymentMade extends ethereum.Event {
  get params(): PaymentMade__Params {
    return new PaymentMade__Params(this);
  }
}

export class PaymentMade__Params {
  _event: PaymentMade;

  constructor(event: PaymentMade) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RentDistributed extends ethereum.Event {
  get params(): RentDistributed__Params {
    return new RentDistributed__Params(this);
  }
}

export class RentDistributed__Params {
  _event: RentDistributed;

  constructor(event: RentDistributed) {
    this._event = event;
  }

  get leaseId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get lessorAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get agentAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class LeaseAgreement__calculateRentPaymentInfoResultRentInfoStruct extends ethereum.Tuple {
  get rentAmount(): BigInt {
    return this[0].toBigInt();
  }

  get totalBalance(): BigInt {
    return this[1].toBigInt();
  }

  get unpaidMonths(): BigInt {
    return this[2].toBigInt();
  }

  get rentDueDate(): BigInt {
    return this[3].toBigInt();
  }
}

export class LeaseAgreement__leasesResultSecurityDepositStruct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get paid(): boolean {
    return this[1].toBoolean();
  }
}

export class LeaseAgreement__leasesResultDatesStruct extends ethereum.Tuple {
  get startDate(): BigInt {
    return this[0].toBigInt();
  }

  get endDate(): BigInt {
    return this[1].toBigInt();
  }

  get rentDueDate(): BigInt {
    return this[2].toBigInt();
  }

  get distributableDate(): BigInt {
    return this[3].toBigInt();
  }
}

export class LeaseAgreement__leasesResult {
  value0: Address;
  value1: Address;
  value2: BigInt;
  value3: LeaseAgreement__leasesResultSecurityDepositStruct;
  value4: BigInt;
  value5: BigInt;
  value6: LeaseAgreement__leasesResultDatesStruct;
  value7: BigInt;
  value8: BigInt;
  value9: Address;
  value10: i32;
  value11: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: BigInt,
    value3: LeaseAgreement__leasesResultSecurityDepositStruct,
    value4: BigInt,
    value5: BigInt,
    value6: LeaseAgreement__leasesResultDatesStruct,
    value7: BigInt,
    value8: BigInt,
    value9: Address,
    value10: i32,
    value11: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromTuple(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromAddress(this.value9));
    map.set(
      "value10",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value10))
    );
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    return map;
  }

  getLessor(): Address {
    return this.value0;
  }

  getLessee(): Address {
    return this.value1;
  }

  getRentAmount(): BigInt {
    return this.value2;
  }

  getSecurityDeposit(): LeaseAgreement__leasesResultSecurityDepositStruct {
    return this.value3;
  }

  getLatePaymentFee(): BigInt {
    return this.value4;
  }

  getGracePeriod(): BigInt {
    return this.value5;
  }

  getDates(): LeaseAgreement__leasesResultDatesStruct {
    return this.value6;
  }

  getExtensionCount(): BigInt {
    return this.value7;
  }

  getPropertyTokenId(): BigInt {
    return this.value8;
  }

  getAgent(): Address {
    return this.value9;
  }

  getAgentPercentage(): i32 {
    return this.value10;
  }

  getUnclaimedRentAmount(): BigInt {
    return this.value11;
  }
}

export class LeaseAgreement extends ethereum.SmartContract {
  static bind(address: Address): LeaseAgreement {
    return new LeaseAgreement("LeaseAgreement", address);
  }

  calculateRentPaymentInfo(
    leaseId: BigInt
  ): LeaseAgreement__calculateRentPaymentInfoResultRentInfoStruct {
    let result = super.call(
      "calculateRentPaymentInfo",
      "calculateRentPaymentInfo(uint256):((uint256,uint256,uint32,uint256))",
      [ethereum.Value.fromUnsignedBigInt(leaseId)]
    );

    return changetype<
      LeaseAgreement__calculateRentPaymentInfoResultRentInfoStruct
    >(result[0].toTuple());
  }

  try_calculateRentPaymentInfo(
    leaseId: BigInt
  ): ethereum.CallResult<
    LeaseAgreement__calculateRentPaymentInfoResultRentInfoStruct
  > {
    let result = super.tryCall(
      "calculateRentPaymentInfo",
      "calculateRentPaymentInfo(uint256):((uint256,uint256,uint32,uint256))",
      [ethereum.Value.fromUnsignedBigInt(leaseId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<LeaseAgreement__calculateRentPaymentInfoResultRentInfoStruct>(
        value[0].toTuple()
      )
    );
  }

  deedNFT(): Address {
    let result = super.call("deedNFT", "deedNFT():(address)", []);

    return result[0].toAddress();
  }

  try_deedNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("deedNFT", "deedNFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  fundsManager(): Address {
    let result = super.call("fundsManager", "fundsManager():(address)", []);

    return result[0].toAddress();
  }

  try_fundsManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("fundsManager", "fundsManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  leaseCounter(): BigInt {
    let result = super.call("leaseCounter", "leaseCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_leaseCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("leaseCounter", "leaseCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  leaseNFT(): Address {
    let result = super.call("leaseNFT", "leaseNFT():(address)", []);

    return result[0].toAddress();
  }

  try_leaseNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall("leaseNFT", "leaseNFT():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  leases(param0: BigInt): LeaseAgreement__leasesResult {
    let result = super.call(
      "leases",
      "leases(uint256):(address,address,uint256,(uint256,bool),uint256,uint32,(uint256,uint256,uint256,uint256),uint256,uint256,address,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new LeaseAgreement__leasesResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toBigInt(),
      changetype<LeaseAgreement__leasesResultSecurityDepositStruct>(
        result[3].toTuple()
      ),
      result[4].toBigInt(),
      result[5].toBigInt(),
      changetype<LeaseAgreement__leasesResultDatesStruct>(result[6].toTuple()),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toAddress(),
      result[10].toI32(),
      result[11].toBigInt()
    );
  }

  try_leases(
    param0: BigInt
  ): ethereum.CallResult<LeaseAgreement__leasesResult> {
    let result = super.tryCall(
      "leases",
      "leases(uint256):(address,address,uint256,(uint256,bool),uint256,uint32,(uint256,uint256,uint256,uint256),uint256,uint256,address,uint8,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new LeaseAgreement__leasesResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toBigInt(),
        changetype<LeaseAgreement__leasesResultSecurityDepositStruct>(
          value[3].toTuple()
        ),
        value[4].toBigInt(),
        value[5].toBigInt(),
        changetype<LeaseAgreement__leasesResultDatesStruct>(value[6].toTuple()),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toAddress(),
        value[10].toI32(),
        value[11].toBigInt()
      )
    );
  }

  paymentToken(): Address {
    let result = super.call("paymentToken", "paymentToken():(address)", []);

    return result[0].toAddress();
  }

  try_paymentToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("paymentToken", "paymentToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  subdivisionNFT(): Address {
    let result = super.call("subdivisionNFT", "subdivisionNFT():(address)", []);

    return result[0].toAddress();
  }

  try_subdivisionNFT(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "subdivisionNFT",
      "subdivisionNFT():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _leaseNFT(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _deedNFT(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _subdivisionNFT(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _fundsManager(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateLeaseCall extends ethereum.Call {
  get inputs(): CreateLeaseCall__Inputs {
    return new CreateLeaseCall__Inputs(this);
  }

  get outputs(): CreateLeaseCall__Outputs {
    return new CreateLeaseCall__Outputs(this);
  }
}

export class CreateLeaseCall__Inputs {
  _call: CreateLeaseCall;

  constructor(call: CreateLeaseCall) {
    this._call = call;
  }

  get _lessee(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _rentAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _securityDepositAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _propertyTokenId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get _latePaymentFee(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _gracePeriod(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class CreateLeaseCall__Outputs {
  _call: CreateLeaseCall;

  constructor(call: CreateLeaseCall) {
    this._call = call;
  }
}

export class DistributeRentCall extends ethereum.Call {
  get inputs(): DistributeRentCall__Inputs {
    return new DistributeRentCall__Inputs(this);
  }

  get outputs(): DistributeRentCall__Outputs {
    return new DistributeRentCall__Outputs(this);
  }
}

export class DistributeRentCall__Inputs {
  _call: DistributeRentCall;

  constructor(call: DistributeRentCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DistributeRentCall__Outputs {
  _call: DistributeRentCall;

  constructor(call: DistributeRentCall) {
    this._call = call;
  }
}

export class ExtendLeaseCall extends ethereum.Call {
  get inputs(): ExtendLeaseCall__Inputs {
    return new ExtendLeaseCall__Inputs(this);
  }

  get outputs(): ExtendLeaseCall__Outputs {
    return new ExtendLeaseCall__Outputs(this);
  }
}

export class ExtendLeaseCall__Inputs {
  _call: ExtendLeaseCall;

  constructor(call: ExtendLeaseCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get extensionPeriod(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ExtendLeaseCall__Outputs {
  _call: ExtendLeaseCall;

  constructor(call: ExtendLeaseCall) {
    this._call = call;
  }
}

export class PayRentCall extends ethereum.Call {
  get inputs(): PayRentCall__Inputs {
    return new PayRentCall__Inputs(this);
  }

  get outputs(): PayRentCall__Outputs {
    return new PayRentCall__Outputs(this);
  }
}

export class PayRentCall__Inputs {
  _call: PayRentCall;

  constructor(call: PayRentCall) {
    this._call = call;
  }

  get _leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PayRentCall__Outputs {
  _call: PayRentCall;

  constructor(call: PayRentCall) {
    this._call = call;
  }
}

export class RemoveAgentCall extends ethereum.Call {
  get inputs(): RemoveAgentCall__Inputs {
    return new RemoveAgentCall__Inputs(this);
  }

  get outputs(): RemoveAgentCall__Outputs {
    return new RemoveAgentCall__Outputs(this);
  }
}

export class RemoveAgentCall__Inputs {
  _call: RemoveAgentCall;

  constructor(call: RemoveAgentCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveAgentCall__Outputs {
  _call: RemoveAgentCall;

  constructor(call: RemoveAgentCall) {
    this._call = call;
  }
}

export class SetAgentCall extends ethereum.Call {
  get inputs(): SetAgentCall__Inputs {
    return new SetAgentCall__Inputs(this);
  }

  get outputs(): SetAgentCall__Outputs {
    return new SetAgentCall__Outputs(this);
  }
}

export class SetAgentCall__Inputs {
  _call: SetAgentCall;

  constructor(call: SetAgentCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _agent(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _percentage(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class SetAgentCall__Outputs {
  _call: SetAgentCall;

  constructor(call: SetAgentCall) {
    this._call = call;
  }
}

export class SetDueDateCall extends ethereum.Call {
  get inputs(): SetDueDateCall__Inputs {
    return new SetDueDateCall__Inputs(this);
  }

  get outputs(): SetDueDateCall__Outputs {
    return new SetDueDateCall__Outputs(this);
  }
}

export class SetDueDateCall__Inputs {
  _call: SetDueDateCall;

  constructor(call: SetDueDateCall) {
    this._call = call;
  }

  get _leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newDueDate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetDueDateCall__Outputs {
  _call: SetDueDateCall;

  constructor(call: SetDueDateCall) {
    this._call = call;
  }
}

export class SetFundsManagerCall extends ethereum.Call {
  get inputs(): SetFundsManagerCall__Inputs {
    return new SetFundsManagerCall__Inputs(this);
  }

  get outputs(): SetFundsManagerCall__Outputs {
    return new SetFundsManagerCall__Outputs(this);
  }
}

export class SetFundsManagerCall__Inputs {
  _call: SetFundsManagerCall;

  constructor(call: SetFundsManagerCall) {
    this._call = call;
  }

  get _fundsManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFundsManagerCall__Outputs {
  _call: SetFundsManagerCall;

  constructor(call: SetFundsManagerCall) {
    this._call = call;
  }
}

export class SubmitDepositCall extends ethereum.Call {
  get inputs(): SubmitDepositCall__Inputs {
    return new SubmitDepositCall__Inputs(this);
  }

  get outputs(): SubmitDepositCall__Outputs {
    return new SubmitDepositCall__Outputs(this);
  }
}

export class SubmitDepositCall__Inputs {
  _call: SubmitDepositCall;

  constructor(call: SubmitDepositCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SubmitDepositCall__Outputs {
  _call: SubmitDepositCall;

  constructor(call: SubmitDepositCall) {
    this._call = call;
  }
}

export class TerminateLeaseCall extends ethereum.Call {
  get inputs(): TerminateLeaseCall__Inputs {
    return new TerminateLeaseCall__Inputs(this);
  }

  get outputs(): TerminateLeaseCall__Outputs {
    return new TerminateLeaseCall__Outputs(this);
  }
}

export class TerminateLeaseCall__Inputs {
  _call: TerminateLeaseCall;

  constructor(call: TerminateLeaseCall) {
    this._call = call;
  }

  get leaseId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TerminateLeaseCall__Outputs {
  _call: TerminateLeaseCall;

  constructor(call: TerminateLeaseCall) {
    this._call = call;
  }
}
