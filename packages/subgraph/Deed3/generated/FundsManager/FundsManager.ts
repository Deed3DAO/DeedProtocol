// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FundsStored extends ethereum.Event {
  get params(): FundsStored__Params {
    return new FundsStored__Params(this);
  }
}

export class FundsStored__Params {
  _event: FundsStored;

  constructor(event: FundsStored) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get newBalance(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get destination(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get caller(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get newBalance(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class FundsManager extends ethereum.SmartContract {
  static bind(address: Address): FundsManager {
    return new FundsManager("FundsManager", address);
  }

  accountsMapping(param0: Address, param1: BigInt, param2: Address): BigInt {
    let result = super.call(
      "accountsMapping",
      "accountsMapping(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );

    return result[0].toBigInt();
  }

  try_accountsMapping(
    param0: Address,
    param1: BigInt,
    param2: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "accountsMapping",
      "accountsMapping(address,uint256,address):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1),
        ethereum.Value.fromAddress(param2)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  balanceOf(_id: BigInt, _token: Address): BigInt {
    let result = super.call(
      "balanceOf",
      "balanceOf(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_id),
        ethereum.Value.fromAddress(_token)
      ]
    );

    return result[0].toBigInt();
  }

  try_balanceOf(_id: BigInt, _token: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "balanceOf",
      "balanceOf(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_id),
        ethereum.Value.fromAddress(_token)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class StoreCall extends ethereum.Call {
  get inputs(): StoreCall__Inputs {
    return new StoreCall__Inputs(this);
  }

  get outputs(): StoreCall__Outputs {
    return new StoreCall__Outputs(this);
  }
}

export class StoreCall__Inputs {
  _call: StoreCall;

  constructor(call: StoreCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _sender(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class StoreCall__Outputs {
  _call: StoreCall;

  constructor(call: StoreCall) {
    this._call = call;
  }
}

export class WidthdrawCall extends ethereum.Call {
  get inputs(): WidthdrawCall__Inputs {
    return new WidthdrawCall__Inputs(this);
  }

  get outputs(): WidthdrawCall__Outputs {
    return new WidthdrawCall__Outputs(this);
  }
}

export class WidthdrawCall__Inputs {
  _call: WidthdrawCall;

  constructor(call: WidthdrawCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _recipient(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class WidthdrawCall__Outputs {
  _call: WidthdrawCall;

  constructor(call: WidthdrawCall) {
    this._call = call;
  }
}
